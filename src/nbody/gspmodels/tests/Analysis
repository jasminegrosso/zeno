# ~/zeno/src/nbody/gspmodel/test/Analysis:

########################################################################
# Test analytic treatment of smoothing.

TSEPS = 0.025
TSNPT = 1024k

# test_smooth_cusp1: Test Plummer smoothing on alpha = -1 model.
# Mass distribution has M[r_] := r^2 and rho[r_] := 1/(2 Pi r)
# out to r = 1.  Output file "rho_eps_1.txt" lists radius,
# numerical, and analytic values for smoothed mass density.

test_smooth_cusp1:
	makesnap - nbody=$(TSNPT) | \
	  snapset - tmp1.dat \
	          x="x * rsqrt((real) i / (real) n)" \
	          y="y * rsqrt((real) i / (real) n)" \
	          z="z * rsqrt((real) i / (real) n)"
	rm -f tmp1.txt
	gawk 'BEGIN { \
	  for (z = 0.0; z <= 0.5; z += 1.0/128.0) \
	    printf("make -f Analysis eval_rho_eps IN=tmp1.dat OUT=tmp1.txt " \
	           "EPS=$(TSEPS) ZOFF=%f\n", z); \
	}' | sh
	gawk '{ \
	  if (NR == 1) \
	    printf("#%7s  %8s  %8s\n", "r", "rho_num", "rho_true"); \
	  printf("%8.4f  %8.4f  %8.4f\n", $$1, $$2, \
	         1 / (2 * 3.14159 * sqrt($$1*$$1 + $(TSEPS)*$(TSEPS)))); \
	}' tmp1.txt > rho_eps_1$X.txt
	rm -f tmp1.dat tmp1.txt

eval_rho_eps: $(IN)
	snapstat $(IN) options=sum \
	         value="m * (3/(4 * PI)) * rsqr($(EPS)) / \
	                  rpow(rsqr(x) + rsqr(y) + rsqr(z - $(ZOFF)) + rsqr($(EPS)), 2.5)" | \
	  gawk '{ if (NR == 2) printf("%8.4f  %8.4f\n", $(ZOFF), $$2); }' >> $(OUT)

# list_cusp1:

C1EPS = 0.03125
C1KAP = 1.75

list_cusp1:
	gawk 'BEGIN { \
	  rho_a = 1 / (2 * 3.141592); a = 1.0; eps = $(C1EPS); kap = $(C1KAP); \
	  printf("#%11s  %12s  %12s  %12s  %12s  %12s\n", \
	         "r", "rho", "M", "r/eps", "M_ap/M", "rho_ap/rho"); \
	  for (lgr = -10.0; lgr <= 0.0; lgr += 0.0625) { \
	    r = exp(log(2.0) * lgr); \
	    rho = rho_a * a / sqrt(r*r + eps*eps); \
	    x = r / eps; \
	    M = 2 * 3.141592 * a * rho_a * \
	          (r * sqrt(r*r + eps*eps) - eps*eps * log(x + sqrt(x*x + 1))); \
	    y = exp(log((3 * eps) / (2 * r)) * kap); \
	    rho_ap = (rho_a * a / r) * exp(log(1 + y) / (- kap)) * (2 + y / (1 + y)) / 2; \
	    M_ap = 2 * 3.141592 * a * rho_a * r*r * exp(log(1 + y) / (- kap)); \
	    printf("%12.6e  %12.6e  %12.6e  %12.6e  %12.6e  %12.6e\n", \
	           r, rho, M, r/eps, M_ap/M, rho_ap/rho); \
	  } \
	}'

########################################################################

analyze:
	gspdisk out=i000_0150.dat mdisk=0.25 alpha=12.0 zdisk=0.0125 \
	        epsilon=0.0150 r_mu=0.075 ndisk=256k eta=0.25
	treecode i000_0150.dat f000_0150.dat eps=0.0075 theta=0.5 usequad=t \
	         tstop=0 outputs=Mass,Position,Velocity,Potential,Acceleration
	snapsort f000_0150.dat - value=etot | \
	  snaphist - value=i/2048.0 range=0:128 nbins=128 \
	           weight="etot/2048.0" > Etot_0150.txt
	snapsort f000_0150.dat - value=etot | \
	  snaphist - value=i/2048.0 range=0:128 nbins=128 \
	           weight="m * (vx*vx + vy*vy)" > Kxy_0150.txt
	snapsort f000_0150.dat - value=etot | \
	  snaphist - value=i/2048.0 range=0:128 nbins=128 \
	           weight="- m * (x*ax + y*ay)" > Wxy_0150.txt
